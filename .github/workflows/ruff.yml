name: Ruff

on: [push]

# Add permissions for the token to write back to the repo
permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
    steps:
    - uses: actions/checkout@v4
      with:
        # We must check out the specific branch name to be able to push
        ref: ${{ github.ref_name }}
        
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ruff
        pip install -r requirements.txt
    
    - name: Run Ruff Formatter (Apply fixes)
      run: |
        # Run the formatter to apply changes, not just check
        ruff format .
    
    - name: Commit and push formatting changes
      run: |
        # Configure the git user
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        
        # Check if there are any changes to commit
        if ! git diff --quiet; then
          echo "Formatting changes detected. Committing..."
          git add .
          # The [skip ci] tag prevents this commit from re-triggering the workflow
          git commit -m "style: auto-format with ruff [skip ci]"
          git push
        else
          echo "No formatting changes to commit."
        fi

    - name: Run Ruff Linter (Check)
      run: |
        # Now run the linter check on the (newly formatted) code
        ruff check . --output-format=github